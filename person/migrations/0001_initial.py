# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-28 19:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0028_merge'),
    ]

    operations = [
        migrations.CreateModel(
            name='BoardAndLeadershipPeoplePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_description', wagtail.fields.RichTextField(blank=True, null=True)),
                ('role_query', models.CharField(choices=[(b'Board Member', b'Board Members'), (b'Leadership Team', b'Leadership Team'), (b'Central Staff', b'Central Staff')], default=b'Board Members', max_length=50)),
            ],
            options={
                'verbose_name': 'Our People Page for Board of Directors, Central Staff, and Leadership Team',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ExpertPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_description', wagtail.fields.RichTextField(blank=True, null=True)),
                ('contact_information', wagtail.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='OurPeoplePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_description', wagtail.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Homepage for All People in NAF',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('position_at_new_america', models.CharField(blank=True, help_text=b'Position or Title at New America', max_length=500, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('short_bio', wagtail.fields.RichTextField(blank=True, null=True)),
                ('long_bio', wagtail.fields.RichTextField(blank=True, null=True)),
                ('expert', models.BooleanField(default=False)),
                ('leadership', models.BooleanField(default=False)),
                ('social_media', wagtail.fields.StreamField([(b'twitter', wagtail.blocks.URLBlock(help_text=b'Twitter Profile Link', icon=b'user', required=False)), (b'facebook', wagtail.blocks.URLBlock(help_text=b'Facebook Profile', icon=b'user', required=False)), (b'youtube', wagtail.blocks.URLBlock(help_text=b'YouTube Channel', icon=b'media', required=False)), (b'google_plus', wagtail.blocks.URLBlock(help_text=b'Google+ Profile', icon=b'user', required=False)), (b'linkedin', wagtail.blocks.URLBlock(help_text=b'LinkedIn Profile', icon=b'user', required=False)), (b'tumblr', wagtail.blocks.URLBlock(help_text=b'Tumblr', icon=b'user', required=False))])),
                ('role', models.CharField(choices=[(b'Board Member', b'Board Member'), (b'Fellow', b'Fellow'), (b'Central Staff', b'Central Staff'), (b'Program Staff', b'Program Staff'), (b'External Author/Former Staff', b'External Author/Former Staff')], max_length=50)),
            ],
            options={
                'ordering': ('last_name',),
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PersonProgramRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PersonSubprogramRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='subprograms', to='person.Person')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramPeoplePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Our People Page for Programs and Subprograms',
            },
            bases=('wagtailcore.page',),
        ),
    ]
