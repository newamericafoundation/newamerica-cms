# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-28 19:42
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import taggit.managers
import wagtail.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('home', '0001_initial'),
        ('wagtailimages', '0012_copy_image_permissions_to_collections'),
        ('person', '0001_initial'),
        ('programs', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
        ('wagtailcore', '0028_merge'),
    ]

    operations = [
        migrations.AddField(
            model_name='postsubprogramrelationship',
            name='subprogram',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='programs.Subprogram'),
        ),
        migrations.AddField(
            model_name='postprogramrelationship',
            name='post',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='home.Post'),
        ),
        migrations.AddField(
            model_name='postprogramrelationship',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='programs.Program'),
        ),
        migrations.AddField(
            model_name='postauthorrelationship',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='person.Person'),
        ),
        migrations.AddField(
            model_name='postauthorrelationship',
            name='post',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='home.Post'),
        ),
        migrations.AddField(
            model_name='post',
            name='parent_programs',
            field=models.ManyToManyField(blank=True, through='home.PostProgramRelationship', to='programs.Program'),
        ),
        migrations.AddField(
            model_name='post',
            name='post_author',
            field=models.ManyToManyField(blank=True, through='home.PostAuthorRelationship', to='person.Person'),
        ),
        migrations.AddField(
            model_name='post',
            name='post_subprogram',
            field=models.ManyToManyField(blank=True, through='home.PostSubprogramRelationship', to='programs.Subprogram'),
        ),
        migrations.AddField(
            model_name='post',
            name='story_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.CustomImage'),
        ),
        migrations.AddField(
            model_name='orgsimplepage',
            name='story_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.CustomImage'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='feature_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='feature_2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='feature_3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='lead_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='lead_2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='lead_3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='lead_4',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='customrendition',
            name='filter',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customrendition',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renditions', to='home.CustomImage'),
        ),
        migrations.AddField(
            model_name='customimage',
            name='collection',
            field=models.ForeignKey(default=wagtail.models.get_root_collection_id, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Collection', verbose_name='collection'),
        ),
        migrations.AddField(
            model_name='customimage',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text=None, through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='customimage',
            name='uploaded_by_user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='uploaded by user'),
        ),
        migrations.AlterUniqueTogether(
            name='customrendition',
            unique_together=set([('image', 'filter', 'focal_point_key')]),
        ),
    ]
