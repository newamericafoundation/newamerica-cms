# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2018-02-01 19:51
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import wagtail.contrib.table_block.blocks
import wagtail.blocks
import wagtail.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtaildocs', '0007_merge'),
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
        ('home', '0025_auto_20180201_1451'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllReportsHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Organization-wide Reports Homepage',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='home.Post')),
                ('sections', wagtail.fields.StreamField([(b'section', wagtail.blocks.StructBlock([(b'title', wagtail.blocks.TextBlock()), (b'body', wagtail.blocks.StreamBlock([(b'introduction', wagtail.blocks.RichTextBlock(icon=b'openquote')), (b'heading', wagtail.blocks.CharBlock(classname=b'full title', icon=b'title', template=b'blocks/heading.html')), (b'paragraph', wagtail.blocks.RichTextBlock()), (b'inline_image', wagtail.blocks.StructBlock([(b'image', wagtail.images.blocks.ImageChooserBlock(icon=b'image', required=True)), (b'align', wagtail.blocks.ChoiceBlock(choices=[(b'left', b'Left'), (b'right', b'Right'), (b'full-width', b'Full Width')])), (b'width', wagtail.blocks.ChoiceBlock(choices=[(b'initial', b'Auto'), (b'60%', b'60%'), (b'50%', b'50%'), (b'33.333%', b'33%'), (b'25%', b'25%')], default=b'initial')), (b'open_image_on_click', wagtail.blocks.BooleanBlock(default=False, required=False))], icon=b'image')), (b'video', wagtail.embeds.blocks.EmbedBlock(icon=b'media')), (b'table', wagtail.contrib.table_block.blocks.TableBlock()), (b'button', wagtail.blocks.StructBlock([(b'button_text', wagtail.blocks.CharBlock(max_length=50, required=True)), (b'button_link', wagtail.blocks.URLBlock(default=b'https://www.', required=True)), (b'alignment', wagtail.blocks.ChoiceBlock(choices=[(b'left-aligned', b'Left'), (b'center-aligned', b'Center')]))])), (b'iframe', wagtail.blocks.StructBlock([(b'source_url', wagtail.blocks.URLBlock(required=True)), (b'width', wagtail.blocks.IntegerBlock(help_text=b'The maximum possible iframe width is 1050', max_value=1050)), (b'height', wagtail.blocks.IntegerBlock())], icon=b'link')), (b'dataviz', wagtail.blocks.StructBlock([(b'title', wagtail.blocks.CharBlock(required=False)), (b'subheading', wagtail.blocks.RichTextBlock(required=False)), (b'max_width', wagtail.blocks.IntegerBlock()), (b'show_chart_buttons', wagtail.blocks.BooleanBlock(default=False, required=False)), (b'container_id', wagtail.blocks.CharBlock(required=True))], icon=b'code')), (b'timeline', wagtail.blocks.StructBlock([(b'title', wagtail.blocks.CharBlock(required=True)), (b'subheading', wagtail.blocks.CharBlock(required=False)), (b'default_view', wagtail.blocks.ChoiceBlock(choices=[(b'timeline', b'Timeline'), (b'list', b'List')], default=b'timeline', help_text=b'Should the default view be a timeline or a list?', required=False)), (b'major_timeline_splits', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([(b'title', wagtail.blocks.CharBlock(required=True)), (b'start_date', wagtail.blocks.DateBlock(required=True)), (b'end_date', wagtail.blocks.DateBlock(required=False)), (b'date_display_type', wagtail.blocks.ChoiceBlock(choices=[(b'year', b'Year'), (b'month', b'Month'), (b'day', b'Day')], default=b'year', help_text=b'Controls how specific the date is displayed'))]), default=b'', required=False)), (b'event_eras', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([(b'title', wagtail.blocks.CharBlock(required=True)), (b'start_date', wagtail.blocks.DateBlock(required=True)), (b'end_date', wagtail.blocks.DateBlock(required=False)), (b'date_display_type', wagtail.blocks.ChoiceBlock(choices=[(b'year', b'Year'), (b'month', b'Month'), (b'day', b'Day')], default=b'year', help_text=b'Controls how specific the date is displayed'))]), default=b'', required=False)), (b'event_categories', wagtail.blocks.ListBlock(wagtail.blocks.CharBlock(), default=b'', required=False)), (b'event_list', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([(b'title', wagtail.blocks.CharBlock(required=True)), (b'italicize_title', wagtail.blocks.BooleanBlock(default=False, required=False)), (b'description', wagtail.blocks.RichTextBlock(required=False)), (b'category', wagtail.blocks.CharBlock(required=False)), (b'start_date', wagtail.blocks.DateBlock(required=True)), (b'end_date', wagtail.blocks.DateBlock(required=False)), (b'date_display_type', wagtail.blocks.ChoiceBlock(choices=[(b'year', b'Year'), (b'month', b'Month'), (b'day', b'Day')], default=b'year', help_text=b'Controls how specific the date is displayed'))])))], icon=b'arrows-up-down')), (b'google_map', wagtail.blocks.StructBlock([(b'use_page_address', wagtail.blocks.BooleanBlock(default=False, help_text=b'If selected, map will use the address already defined for this page, if applicable. For most posts besides events, this should be left unchecked and the form below should be completed.', required=False)), (b'street', wagtail.blocks.TextBlock(required=False)), (b'city', wagtail.blocks.TextBlock(default=b'Washington', required=False)), (b'state', wagtail.blocks.TextBlock(default=b'D.C.', required=False)), (b'zipcode', wagtail.blocks.TextBlock(default=b'200', required=False))], icon=b'site')), (b'resource_kit', wagtail.blocks.StructBlock([(b'title', wagtail.blocks.CharBlock(required=True)), (b'description', wagtail.blocks.TextBlock(required=False)), (b'resources', wagtail.blocks.StreamBlock([(b'post', wagtail.blocks.StructBlock([(b'name', wagtail.blocks.CharBlock(required=True)), (b'description', wagtail.blocks.RichTextBlock(required=False)), (b'resource', wagtail.blocks.PageChooserBlock(required=True))], icon=b'redirect', label=b'Post')), (b'external_resource', wagtail.blocks.StructBlock([(b'name', wagtail.blocks.CharBlock(required=True)), (b'description', wagtail.blocks.RichTextBlock(required=False)), (b'resource', wagtail.blocks.URLBlock(required=True))], icon=b'site', label=b'External resource')), (b'attachment', wagtail.blocks.StructBlock([(b'name', wagtail.blocks.CharBlock(required=True)), (b'description', wagtail.blocks.RichTextBlock(required=False)), (b'resource', wagtail.documents.blocks.DocumentChooserBlock(required=True))], icon=b'doc-full', label=b'Attachment'))]))], icon=b'folder'))]))], template=b'components/report_section_body.html'))])),
                ('overwrite_sections_on_save', models.BooleanField(default=False, help_text=b'If checked, sections and endnote fields will be overwritten with Word document source on save. Use with CAUTION!')),
                ('endnotes', wagtail.fields.StreamField([(b'endnote', wagtail.blocks.StructBlock([(b'number', wagtail.blocks.TextBlock()), (b'note', wagtail.blocks.RichTextBlock())]))])),
                ('report_url', wagtail.fields.StreamField([(b'report_url', wagtail.blocks.URLBlock(null=True, required=False))])),
                ('attachment', wagtail.fields.StreamField([(b'attachment', wagtail.documents.blocks.DocumentChooserBlock(null=True, required=False))])),
                ('publication_cover_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.CustomImage')),
                ('source_word_doc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document', verbose_name=b'Source Word Document')),
            ],
            options={
                'verbose_name': 'Report',
            },
            bases=('home.post',),
        ),
        migrations.CreateModel(
            name='ReportsHomepage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Reports Homepage',
            },
            bases=('wagtailcore.page',),
        ),
    ]
